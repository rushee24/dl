#include <iostream>
#include <omp.h>
#include <stdlib.h>


using namespace std;

void bubblesort(int *,int );
void swap(int &,int &);

void bubblesort(int *a,int n){
	for(int i=0;i<n;i++){
		int first=i%2;
		#pragma omp parallel for shared(a,first)
		for(int j=first;j<n-1;j+=2){
			if(a[j]>a[j+1]){
				swap(a[j],a[j+1]);
			}
		}
	}
}
void swap(int &a,int &b){
	int temp=a;
	a=b;
	b=temp;
}
int main() {
	int *a,n;
	cout<<"Enter no. of elements: ";
	cin>>n;
	a=new int[n];
	cout<<"enter elements:\n ";
	for(int i=0;i<n;i++){
		cin>>a[i];

	}
	bubblesort(a,n);
	cout<<"sorted array is: ";
	for(int i=0;i<n;i++){
		cout<<a[i]<<endl;
	}
	return 0;
}